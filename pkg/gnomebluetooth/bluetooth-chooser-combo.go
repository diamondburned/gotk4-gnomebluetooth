// Code generated by girgen. DO NOT EDIT.

package gnomebluetooth

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	externglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gtk/v3"
)

// #include <stdlib.h>
// #include <glib-object.h>
import "C"

func init() {
	externglib.RegisterGValueMarshalers([]externglib.TypeMarshaler{
		{T: externglib.Type(C.bluetooth_chooser_combo_get_type()), F: marshalChooserCombor},
	})
}

// CHOOSER_COMBO_FIRST_DEVICE: convenience value used to select the first device
// regardless of its address.
const CHOOSER_COMBO_FIRST_DEVICE = "00:00:00:00:00:00"

type ChooserCombo struct {
	_ [0]func() // equal guard
	gtk.Box
}

var (
	_ gtk.Containerer     = (*ChooserCombo)(nil)
	_ externglib.Objector = (*ChooserCombo)(nil)
)

func wrapChooserCombo(obj *externglib.Object) *ChooserCombo {
	return &ChooserCombo{
		Box: gtk.Box{
			Container: gtk.Container{
				Widget: gtk.Widget{
					InitiallyUnowned: externglib.InitiallyUnowned{
						Object: obj,
					},
					Object: obj,
					ImplementorIface: atk.ImplementorIface{
						Object: obj,
					},
					Buildable: gtk.Buildable{
						Object: obj,
					},
				},
			},
			Object: obj,
			Orientable: gtk.Orientable{
				Object: obj,
			},
		},
	}
}

func marshalChooserCombor(p uintptr) (interface{}, error) {
	return wrapChooserCombo(externglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ConnectChooserCreated: signal is sent when a popup dialogue is created for
// the user to select a device. This signal allows you to change the
// configuration and filtering of the tree from its defaults.
func (v *ChooserCombo) ConnectChooserCreated(f func(chooser *externglib.Object)) externglib.SignalHandle {
	return v.Connect("chooser-created", f)
}

// NewChooserCombo returns a new ChooserCombo widget.
//
// The function returns the following values:
//
//    - chooserCombo: ChooserCombo widget.
//
func NewChooserCombo() *ChooserCombo {
	var _cret *C.GtkWidget // in

	_cret = C.bluetooth_chooser_combo_new()

	var _chooserCombo *ChooserCombo // out

	_chooserCombo = wrapChooserCombo(externglib.Take(unsafe.Pointer(_cret)))

	return _chooserCombo
}
